import React, { useState, useRef, useEffect } from "react";
import {
    Link,
    useNavigate /* 페이지 이동을 위해 */
} from "react-router-dom";
import styles from './Navbar.module.css'; // Navbar.css 파일 import
import Dropdown from "./DropDown"; // 전체 dropdown 메뉴 합침
import Dropdown1 from "./Dropdown1";
import Dropdown2 from "./Dropdown2";
import Dropdown3 from "./Dropdown3";
import Dropdown4 from "./Dropdown4";
import Dropdown5 from "./Dropdown5";
import Dropdown6 from "./Dropdown6";

function Navbar() {
    const navigate = useNavigate();
    const isLoggedIn = localStorage.getItem("isLoggedIn") === "true"; // boolean 타입으로 저장
    const [ selectedMenu, setSelectedMenu ] = useState('');

    const menuItems = [
        { name: '관리자 관리', path: '/ManagerPage' },
        { name: '사용자 정보 관리', path: '/UserManagePage' },
        { name: '진단 기록 관리', path: '/UserRecordManagePage' },
        { name: '광고 관리', path: '/AdManagePage' },
        { name: '커뮤니티 관리', path: '/CommunityManagePage' },
        { name: 'AI 모델', path: '/AiModelPage' }
    ];


    const onClickLogout = () => {
        // localStorage.clear();
        // localStorage.setItem("isLoggedIn", false);
        // // setIsLoggedIn(false);
        // alert("로그아웃되었습니다.");
        // navigate("/");

        // 사용자에게 로그아웃을 확인 받기
        const isConfirmed = window.confirm("로그아웃 하시겠습니까?");
        if (isConfirmed) {
            // 확인 받았을 경우 로컬 스토리지 비우기와 페이지 이동
            localStorage.clear();
            alert("로그아웃되었습니다.");
            navigate('/');
        } else {
            // 아무런 동작 없이 페이지에 남기

        }
    }

    const [view1, setView1] = useState(false);
    const [view2, setView2] = useState(false);
    const [view3, setView3] = useState(false);
    const [view4, setView4] = useState(false);
    const [view5, setView5] = useState(false);
    const [view6, setView6] = useState(false);
    const wrapperRef = useRef(null); // Navbar 요소를 참조하기 위한 useRef

    // useEffect(() => {
    //     // 외부 클릭 시 메뉴 닫기
    //     function handleClickOutside(event) {
    //         if (wrapperRef.current) {
    //             setView1(false);
    //             setView2(false);
    //             setView3(false);
    //             setView4(false);
    //             setView5(false);
    //             setView6(false);
    //         }
    //     }
    //     // 이벤트 리스너 등록
    //     document.addEventListener("mousedown", handleClickOutside);
    //     return () => {
    //         // 컴포넌트 언마운트 시 이벤트 리스너 해제
    //         document.removeEventListener("mousedown", handleClickOutside);
    //     };
    // }, [wrapperRef]);

    return (

        // 로그인 한 상태

        <div className={styles.navbarWrapper} ref={wrapperRef} >
            {isLoggedIn ? (
                <>
                    <Link className={styles.link} to={'/MainPage'}><img className={styles.logoImage} src="/img/SkinBuddy.png" alt="메인 로고 버튼" /></Link>
                    <ul className={styles.ul} onClick={() => { setView1(!view1) }}>
                        {view1 ? <p className={styles.menuMainTextChoose} >관리자 관리</p> : <p className={styles.menuMainText}>관리자 관리</p>}
                        {view1 && <div className={styles.dropDownMenu}><Dropdown /></div>}
                    </ul>
                    <ul className={styles.ul} onClick={() => { setView2(!view2) }}>
                        {view2 ? <p className={styles.menuMainTextChoose} >사용자 정보 관리</p> : <p className={styles.menuMainText}>사용자 정보 관리</p>}
                        {view2 && <div className={styles.dropDownMenu}><Dropdown /></div>}
                    </ul>
                    <ul className={styles.ul} onClick={() => { setView3(!view3) }}>
                        {view3 ? <p className={styles.menuMainTextChoose} >진단 기록 관리</p> : <p className={styles.menuMainText}>진단 기록 관리</p>}
                        {view3 && <div className={styles.dropDownMenu}><Dropdown /></div>}
                    </ul>
                    <ul className={styles.ul} onClick={() => { setView4(!view4) }}>
                        {view4 ? <p className={styles.menuMainTextChoose} >광고 관리</p> : <p className={styles.menuMainText}>광고 관리</p>}
                        {view4 && <div className={styles.dropDownMenu}><Dropdown /></div>}
                    </ul>
                    <ul className={styles.ul} onClick={() => { setView5(!view5) }}>
                        {view5 ? <p className={styles.menuMainTextChoose} >커뮤니티 관리</p> : <p className={styles.menuMainText}>커뮤니티 관리</p>}
                        {view5 && <div className={styles.dropDownMenu}><Dropdown /></div>}
                    </ul>
                    <ul className={styles.ul} onClick={() => { setView6(!view6) }}>
                        {view6 ? <p className={styles.menuMainTextChoose} >AI 모델</p> : <p className={styles.menuMainText}>AI 모델</p>}
                        {view6 && <div className={styles.dropDownMenu}><Dropdown /></div>}
                    </ul>
                    {/* 로그인 상태일 경우 로그아웃 버튼 표시 */}
                    <div className={styles.logoutButton} onClick={onClickLogout}>로그아웃</div>
                </>
            ) : (
                <>

                    {/* 로그인 안 한 상태 */}
                    <Link className={styles.link} to={'/'}><img className={styles.logoImage} src="/img/SkinBuddy.png" alt="메인 로고 버튼" /></Link>
                    <ul className={styles.ul} onClick={() => { alert("로그인이 필요합니다.") }}>
                        <p className={styles.menuMainText}>관리자 관리</p>
                    </ul>
                    <ul className={styles.ul} onClick={() => { alert("로그인이 필요합니다.") }}>
                        <p className={styles.menuMainText}>사용자 정보 관리</p>
                    </ul>
                    <ul className={styles.ul} onClick={() => { alert("로그인이 필요합니다.") }}>
                        <p className={styles.menuMainText}>진단 기록 관리</p>
                    </ul>
                    <ul className={styles.ul} onClick={() => { alert("로그인이 필요합니다.") }}>
                        <p className={styles.menuMainText}>광고 관리</p>
                    </ul>
                    <ul className={styles.ul} onClick={() => { alert("로그인이 필요합니다.") }}>
                        <p className={styles.menuMainText}>커뮤니티 관리</p>
                    </ul>
                    <ul className={styles.ul} onClick={() => { alert("로그인이 필요합니다.") }}>
                        <p className={styles.menuMainText}>AI모델</p>
                    </ul>
                    {/* 로그아웃 상태일 경우 로그인 버튼 표시 */}
                    <Link className={styles.link} to="/LoginPage"><p className={styles.managerLoginButton} >관리자 로그인</p></Link>
                </>
            )}
        </div>
    )
}

export default Navbar